DROP TABLE IF EXISTS users, category, location, compilation, event, request, compilations_events, comments;

CREATE TABLE IF NOT EXISTS users (
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name                CHARACTER VARYING(250) NOT NULL,
    email               CHARACTER VARYING(254) NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (id),
    CONSTRAINT constraint_user UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS category (
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name                CHARACTER VARYING(50) NOT NULL,
    CONSTRAINT pk_category_id PRIMARY KEY (id),
    CONSTRAINT constraint_name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS location (
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    lat                 FLOAT4 NOT NULL,
    lon                 FLOAT4 NOT NULL,
    CONSTRAINT pk_location_id PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS compilation (
    id                  BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    pinned              BOOLEAN DEFAULT false,
    title               CHARACTER VARYING(50) NOT NULL,
    CONSTRAINT constraint_compilation UNIQUE (title)
);

CREATE TABLE IF NOT EXISTS event (
    id                  BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    title               CHARACTER VARYING(120),
    annotation          CHARACTER VARYING(2000) NOT NULL,
    description         CHARACTER VARYING(7000),
    category_id         BIGINT NOT NULL,
    created_date        TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    event_date          TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    initiator_id        BIGINT NOT NULL,
    location_id         BIGINT NOT NULL,
    paid                BOOLEAN DEFAULT false,
    participant_limit   INT DEFAULT 0,
    request_moderation  BOOLEAN DEFAULT true,
    published_on        TIMESTAMP WITHOUT TIME ZONE,
    state               CHARACTER VARYING(50),
    CONSTRAINT fk_event_to_users FOREIGN KEY (initiator_id) REFERENCES users(id)
        ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT fk_event_to_category_id FOREIGN KEY (category_id) REFERENCES category(id) ON DELETE CASCADE,
    CONSTRAINT fk_event_to_location_id FOREIGN KEY (location_id) REFERENCES location(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS request (
    id                  BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    event_id            BIGINT NOT NULL,
    requester_id        BIGINT NOT NULL,
    status              CHARACTER VARYING(50),
    created_date        TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT fk_request_to_users FOREIGN KEY (requester_id) REFERENCES users(id) ON DELETE CASCADE,
    CONSTRAINT fk_request_to_event FOREIGN KEY (event_id) REFERENCES event(id) ON DELETE CASCADE,
    CONSTRAINT constraint_request UNIQUE (event_id, requester_id)
);

CREATE TABLE IF NOT EXISTS compilations_events (
    compilation_id      BIGINT NOT NULL,
    event_id            BIGINT NOT NULL,
    CONSTRAINT fk_compilations_events PRIMARY KEY (compilation_id, event_id)

);

CREATE TABLE IF NOT EXISTS comments (
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    text                CHARACTER VARYING(2000) NOT NULL,
    event_id            BIGINT NOT NULL,
    author_id           BIGINT NOT NULL,
    status              CHARACTER VARYING(50),
    created             TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(),
    CONSTRAINT pk_comments PRIMARY KEY (id),
    CONSTRAINT fk_comments_to_event_id FOREIGN KEY (event_id) REFERENCES event(id),
    CONSTRAINT fk_comments_to_author_id FOREIGN KEY (author_id) REFERENCES users(id)
)